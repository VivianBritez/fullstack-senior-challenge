name: Deploy to AWS
on:
  push:
    branches:
      - "main"
env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SERVER_PUBLIC_IP: ${{ secrets.EC2_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, push docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: aws-deploy
          IMAGE_TAG: ${{ github.sha }}
        run: |-
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Deploy docker image to EC2
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: fullstack-senior-challenge
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: us-east-1
          PORT: 3000  # Define your PORT here
          JWT_SECRET: ${{ secrets.JWT_SECRET }}  # Ensure this secret is set in your GitHub repository
          URL_SUNAT: https://api.sunat.gob.pe  # Example URL, replace with your actual URL
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION,PORT,JWT_SECRET,URL_SUNAT
          script: |-
            sudo apt update
            sudo apt install docker.io -y
            sudo apt install awscli -y
            sudo $(aws ecr get-login --no-include-email --region ap-south-1);
            sudo docker stop myappcontainer || true
            sudo docker rm myappcontainer || true
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            sudo docker run -d --name myappcontainer -p $PORT:3000 \
              -e PORT=$PORT \
              -e JWT_SECRET=$JWT_SECRET \
              -e URL_SUNAT=$URL_SUNAT \
              $REGISTRY/$REPOSITORY:$IMAGE_TAG
